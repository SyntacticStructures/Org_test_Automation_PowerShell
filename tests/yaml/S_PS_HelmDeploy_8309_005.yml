template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_PS_HelmDeploy_8309_005_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: helmbuild
      buildNumber: 1

  - name: S_PS_HelmDeploy_8309_005_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation.path }}
      branches:
        include: master

  - name: S_PS_HelmDeploy_8309_005_ReleaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: s_distribution
      name: name
      version: '1'

pipelines:
  - name: S_PS_HelmDeploy_8309_005
    configuration:
      jfrogCliVersion: 2
      environmentVariables:
        readOnly:
          release_name_generic: "simplehelm-generic-${run_id}"
          k8s_namespace: "pipe-master-pool"
      nodePool: win_2019
    steps:
      - name: S_PS_HelmDeploy_8309_005_create_build
        type: PowerShell
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PS_HelmDeploy_8309_005_GitRepo
          outputResources:
            - name: S_PS_HelmDeploy_8309_005_BuildInfo
        execution:
          onExecute:
            - add_run_variables JFROG_CLI_BUILD_NUMBER=${run_id}
            - Push-Location ${res_S_PS_HelmDeploy_8309_005_GitRepo_resourcePath}/tests/core/helmdeploy
            - jfrog rt u simplehelm/ "helmgeneric/S_PS_HelmDeploy_8309_005/simplehelm/" --flat=true --build-name=$JFROG_CLI_BUILD_NAME --build-number=$JFROG_CLI_BUILD_NUMBER
            - jfrog rt bce $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - jfrog rt bp $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - write_output S_PS_HelmDeploy_8309_005_BuildInfo buildName=$JFROG_CLI_BUILD_NAME buildNumber=$JFROG_CLI_BUILD_NUMBER

      - name: S_PS_HelmDeploy_8309_005_create_release_bundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: S_PS_HelmDeploy_BuildInfo_8309_005_bundle
          releaseBundleVersion: ${run_id}
          dryRun: false
          sign: true
          inputResources:
            - name: S_PS_HelmDeploy_8309_005_BuildInfo
          outputResources:
            - name: S_PS_HelmDeploy_8309_005_ReleaseBundle

      - name: deploy_helm_chart_from_generic_repo
        type: HelmDeploy
        configuration:
          integrations:
            - name: s_artifactory
            - name: s_kubernetes
          inputResources:
            - name: S_PS_HelmDeploy_8309_005_ReleaseBundle
          helmVersion: 3
          releaseName: ${release_name_generic}
          chartPath: helmgeneric/S_PS_HelmDeploy_8309_005/simplehelm
          flags: "--force --wait --timeout 900s --set image.repository=trriplejay/simplehelm --set image.tag=latest"
          valueFilePaths:
            - values.yaml
          lint: true
          test: true
        execution:
          onComplete:
            - |
              Write-Output "Deleting release bundle..."
              $distributionUrl = $res_S_PS_HelmDeploy_8309_005_ReleaseBundle_sourceDistribution_url
              $distributionUser = $res_S_PS_HelmDeploy_8309_005_ReleaseBundle_sourceDistribution_user
              $distributionPassword = $res_S_PS_HelmDeploy_8309_005_ReleaseBundle_sourceDistribution_apikey
              jfrog config add distribution --overwrite --insecure-tls=$no_verify_ssl --distribution-url $distributionUrl --user $distributionUser --password $distributionPassword --interactive=false
              jfrog config use distribution
              $releaseBundleName = (find_resource_variable "S_PS_HelmDeploy_8309_005_ReleaseBundle" name)
              $releaseBundleVersion = (find_resource_variable "S_PS_HelmDeploy_8309_005_ReleaseBundle" version)
              jfrog ds release-bundle-delete --delete-from-dist=true --insecure-tls=$no_verify_ssl $releaseBundleName $releaseBundleVersion
              jfrog config remove distribution
            - try { helm3 delete simplehelm-generic-${run_id} --namespace $k8s_namespace } catch {}
            - jfrog rt curl -XDELETE "/api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${JFROG_CLI_BUILD_NUMBER}&artifacts=1"
            - try { kubectl delete pod --namespace ${k8s_namespace} simplehelm-generic-${run_id}-test-connection } catch {}
